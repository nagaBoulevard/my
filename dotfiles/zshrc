
# Set up the prompt

autoload -Uz promptinit
promptinit

setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Use modern completion system
autoload -Uz compinit
compinit
zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'



# enable color support
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi





# ALIASES
alias ls='ls --color="auto"'
alias grep='grep --color="auto"'
alias ll='ls -l'
alias la='ls -A'
alias l='ls -CF'
alias lst='ls --sort=time'
alias size="du -h -d1 | sort -k1hr"
alias gs="git status -s"





# FUNCTIONS

function zhead { 
	zcat $1 | head 
}

function ztail { 
	zcat $1 | tail	
}

function zwc { 
	zcat $1 | wc
}

# display the time in a specific format
function prompt_time {
    date +"%H:%M|%d/%m/%y"
}

# display only the beginning and the end of the current wd
function short_wd {
	wd=$(pwd | sed 's/\/home\/gilo/~/')
	if ((${#wd} > 30)); then
		wd="${wd:0:5}...${wd:(-28)}"
	fi
	echo $wd
}

# display the current git branch
function git_branch {
	branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
	if [ $? != 0 ]; 
		then branch=""; 
	fi
	echo "$branch"
	
}





# SETTINGS
export PATH=$PATH:$HOME/.my/bin/

# set colorspace to 256 colors 
export TERM=xterm-256color
export EDITOR=vi

source $HOME/.my/dotfiles/mod/mod.sh

