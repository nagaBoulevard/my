
" PLUGINS {{{
" using vim-plug

" select the plugin directory
call plug#begin('~/.vim/plugged')

Plug 'morhetz/gruvbox'
Plug 'scrooloose/nerdcommenter'

call plug#end()

" }}}


" LOOK {{{

syntax enable
set background=dark
colo gruvbox

hi Normal		ctermbg=None
hi VertSplit	ctermbg=None
hi Folded		ctermbg=None	ctermfg=214		cterm=bold
hi FoldColumn	ctermbg=None
hi Tabline		ctermbg=None	ctermfg=243		cterm=bold
hi TabLineFill	ctermbg=None
hi TablineSel	ctermbg=None	ctermfg=9		cterm=bold
hi StatusLine	ctermbg=None	ctermfg=9 		cterm=bold
hi StatusLineNC	ctermbg=None	ctermfg=243		cterm=bold
hi Pmenu		ctermbg=None	ctermfg=142
hi PmenuSel		ctermbg=None	ctermfg=9		cterm=reverse

set statusline=%=\ %.12F\ %y\ %p%%\ \ 
set fillchars=vert:\ ,stl:\ ,stlnc:\ 
set laststatus=2
set noshowmode

set encoding=utf8
set list listchars=tab:»\ ,trail:·

" }}}


" GENERAL {{{

set autoindent
set backspace=indent,eol,start
set showmatch
set showmode "TODO
set smarttab

set foldmethod=marker

set shiftround
set laststatus=2
set ruler
set showcmd
set wildmenu

set autoread
set encoding=utf-8
set tabstop=4 shiftwidth=4

set incsearch
set number
set hlsearch
set ignorecase
set smartcase
set mouse=a
set hidden
set nobackup
set nowritebackup
set noswapfile
set fileformats=unix,dos,mac

set completeopt=menuone,longest,preview

" General }}}


" MAPPING {{{
" delete prev word
"nnoremap <C-w> i<C-w><Esc>
  
" what should be standard
cnoreabbrev Q q
cnoreabbrev W w
cnoreabbrev Wq wq
cnoreabbrev WQ wq

" remove the Ex mod
nnoremap q <nop>
nnoremap Q <nop>

" undo
nnoremap <C-z> :undo<CR>
inoremap <C-z> <Esc>:undo<CR>i

" folds
nnoremap <space> za

" normal backspace
nmap <BS> i<BS><Esc>

" Move lines up and down
noremap  <C-up>    :m-2<CR>
noremap  <C-down>  :m+1<CR>
inoremap <C-up>    <Esc>:m-2<CR>i
inoremap <C-down>  <Esc>:m+1<CR>i

" Tabs
nnoremap <C-left> :tabprevious<CR>
inoremap <C-left>  <Esc>:tabprevious<CR>i
nnoremap <C-right>  :tabnext<CR>
inoremap <C-right>  <Esc>:tabnext<CR>i
nnoremap <C-t>     :tabnew<CR>
inoremap <C-t>     <Esc>:tabnew<CR>i

" leader
let mapleader = ';'
nnoremap <Leader>p :set paste<CR>
nnoremap <Leader>o :set nopaste<CR>


"identify the hi group at the cursor
map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
			\ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
			\ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

" Mapping }}}


" PLUG-MAPPING {{{

" }}}
